---
- name: "create data dir with proper perms"
  file:
    path: "{{prometheus_data_path}}"
    owner: "{{prometheus_container_user}}"
    group: "{{prometheus_container_group}}"
    mode: "0770"
    state: "directory"

- name: "render site scrape configs"
  delegate_to: "localhost"
  become: false
  template:
    src: "{{item.template}}"
    dest: "{{promfriends_cache_path}}/{{inventory_hostname}}\
    -{{item.template|basename}}"
    mode: "0600"
    vars: "{{item.vars|default(omit)}}"
  register: promfriends_site_rendered
  loop: "{{promfriends_site_configs}}"

- name: "load site scrape configs"
  include_vars:
    file: "{{item.dest}}"
    name: "promfriends_scrape_tmp"
  loop: "{{promfriends_site_rendered.results}}"
  register: promfriends_loaded_configs

- name: "parse out dynamic configs"
  set_fact:
    promfriends_site_scrapes: "{{promfriends_loaded_configs.results \
    | json_query('[].[ansible_facts.promfriends_scrape_tmp] | [].scrapes')}}"

- name: "set sites based scrape structure"
  set_fact:
    prometheus_scrapes: "{{lookup('flattened', promfriends_site_scrapes)}}"
  when: promfriends_site_scrapes|length > 0

- name: "generate rule files"
  template:
    src: "{{item.template}}"
    dest: "{{promfriends_config_path}}/{{(item.template|basename|splitext)[0]}}\
    _rule.yml"
    owner: "{{prometheus_container_user}}"
    group: "{{prometheus_container_group}}"
    mode: "0660"
  loop: "{{promfriends_rule_configs}}"
  when: item.state|default('present') == 'present'
  register: promfriends_update_rules

- name: "remove rule files"
  file:
    path: "{{promfriends_config_path}}/{{(item.template|basename|splitext)[0]}}\
    _rule.yml"
    state: "absent"
  loop: "{{promfriends_rule_configs}}"
  when: item.state|default('present') == 'absent'
  register: promfriends_remove_rules

- name: "generate prometheus configuration"
  template:
    src: "prometheus.yml.j2"
    dest: "{{promfriends_config_path}}/prometheus.yml"
    owner: "{{prometheus_container_user}}"
    group: "{{prometheus_container_group}}"
    mode: "0660"
  register: prom_config

- include_tasks: "docker.yml"
  vars:
    context: "{{prometheus_docker_name}}"
    image: "{{prometheus_image}}"
    publish: "{{prometheus_publish}}"
    volume:
      - "{{promfriends_config_path}}:/etc/prometheus:ro"
      - "{{prometheus_data_path}}:/prometheus"
      - "{{promfriends_config_path}}/web_config.yml:/web_config.yml:ro"
      - "{{promfriends_config_path}}/server.crt:/server.crt:ro"
      - "{{promfriends_config_path}}/server.key:/server.key:ro"
      - "{{promfriends_config_path}}/ca.crt:/ca.crt:ro"
    use_command: >
      --storage.tsdb.retention={{prometheus_retention_time}}
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.config.file=/web_config.yml
      --log.level={{prometheus_log_level}}
      --web.listen-address={{prometheus_address}}:{{prometheus_port}}
    changed: "{{prom_config.changed \
    or promfriends_certs_changed \
    or promfriends_web_config.changed \
    or promfriends_update_rules.changed \
    or promfriends_remove_rules.changed}}"

- name: "ensure prometheus container is running"
  uri:
    url: "https://{{inventory_hostname}}:{{prometheus_port}}/"
    ca_path: "{{promfriends_config_path}}/ca.crt"
    client_cert: "{{promfriends_config_path}}/server.crt"
    client_key: "{{promfriends_config_path}}/server.key"
  register: core_status
  until: core_status.status == 200
  retries: 60
  delay: 5
